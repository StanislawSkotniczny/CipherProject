@page "/caesarcipher"
@using CipherProject.Data;
@using System;
@using System.Text;

<h3>Szyfr Cezara</h3>

<input @bind="inputText" placeholder="Wprowadź tekst">

<label>Przesunięcie: </label>
<input type="number" @bind="shiftAmount">

<button @onclick="EncryptText">Zaszyfruj</button>
<button @onclick="DecryptText">Odszyfruj</button>

<p>
    <strong>Wynik:</strong> @outputText
</p>

@code {
    private string inputText = "";
    private int shiftAmount = 0;
    private string originalText = "";
    private string outputText = "";
    private CharactersList charactersList = new CharactersList();

    private void EncryptText()
    {
        originalText = inputText;
        outputText = CaesarCipherFun(inputText, shiftAmount);
    }

    private void DecryptText()
    {
        originalText = inputText;
        outputText = CaesarDecipherFun(inputText, shiftAmount);
    }

    private string CaesarCipherFun(string text, int shift)
    {
        StringBuilder result = new StringBuilder();

        int listSize = charactersList.PolishCharacters.Count;

        foreach (char character in text)
        {
            string characterString = character.ToString();
            int index = charactersList.PolishCharacters.IndexOf(characterString.ToLower());

            if (index >= 0)
            {
                int newIndex = (index + shift) % listSize;
                if (newIndex < 0)
                {
                    newIndex += listSize;
                }
                result.Append(charactersList.PolishCharacters[newIndex]);
            }
            else
            {
                result.Append(character);
            }
        }

        return result.ToString();
    }

    private string CaesarDecipherFun(string text, int shift)
    {
        StringBuilder result = new StringBuilder();

        int listSize = charactersList.PolishCharacters.Count;

        foreach (char character in text)
        {
            string characterString = character.ToString();
            int index = charactersList.PolishCharacters.IndexOf(characterString.ToLower());

            if (index >= 0)
            {
                int newIndex = (index - shift + listSize) % listSize;
                result.Append(charactersList.PolishCharacters[newIndex]);
            }
            else
            {
                result.Append(character);
            }
        }

        return result.ToString();
    }
}




